# Generated by Django 4.2.2 on 2023-08-10 14:13

from django.db import migrations, models
import django.db.models.deletion
import workspaces.Tenant3.foreign_key.models
import zelthy3.backend.apps.tenants.dynamic_models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='A',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.IntegerField(default=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='C',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('y', models.IntegerField(default=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('value', models.CharField(max_length=20)),
                ('another_value', models.CharField(blank=True, max_length=20)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Favorites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Foo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a', models.CharField(max_length=10)),
                ('d', models.DecimalField(decimal_places=3, max_digits=5)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forum_name', models.CharField(max_length=32)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Genus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('family', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.family')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Kingdom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('domain', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.domain')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Klass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ManualPrimaryKey',
            fields=[
                ('primary_key', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Parent1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name1', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Parent2',
            fields=[
                ('id2', models.AutoField(primary_key=True, serialize=False)),
                ('name2', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=80)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PropertyValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('b', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UniqueNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserStatResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('results', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pointer',
            fields=[
                ('other', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dynamic_models.target')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('place', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dynamic_models.place')),
                ('serves_hot_dogs', models.BooleanField(default=False)),
                ('serves_pizza', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ToFieldPointer',
            fields=[
                ('target', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dynamic_models.target', to_field='name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UniqueNumberChild',
            fields=[
                ('uniquenumber_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dynamic_models.uniquenumber')),
            ],
            options={
                'abstract': False,
            },
            bases=('dynamic_models.uniquenumber',),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('user', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.ouser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UndergroundBar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serves_cocktails', models.BooleanField(default=True)),
                ('place', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dynamic_models.place')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_name', models.CharField(max_length=32)),
                ('system_details', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.systemdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('genus', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.genus')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelatedPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('data', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.datapoint')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelatedModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('link', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.manualprimarykey')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('item', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='props', to='dynamic_models.item')),
                ('value', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dynamic_models.propertyvalue')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dynamic_models.image')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200)),
                ('creator', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.fuser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pointer2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='second_pointer', to='dynamic_models.target')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Phylum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('kingdom', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.kingdom')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('klass', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.klass')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OneBar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serves_cocktails', models.BooleanField(default=True)),
                ('place', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.place')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32)),
                ('forum', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dynamic_models.forum')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultiModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('link1', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.place')),
                ('link2', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.manualprimarykey')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='klass',
            name='phylum',
            field=zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.phylum'),
        ),
        migrations.CreateModel(
            name='HybridSpecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('parent_1', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_1', to='dynamic_models.species')),
                ('parent_2', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_2', to='dynamic_models.species')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HiddenPointer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hidden+', to='dynamic_models.target')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='forum',
            name='system_info',
            field=zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.systeminfo'),
        ),
        migrations.AddField(
            model_name='family',
            name='order',
            field=zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.order'),
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_temp', models.BooleanField(default=False)),
                ('school', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.school')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.CharField(max_length=250)),
                ('post', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dynamic_models.npost')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('poll', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poll_choice', to='dynamic_models.poll')),
                ('related_poll', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_choice', to='dynamic_models.poll')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('b', models.CharField(max_length=10)),
                ('a', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(default=workspaces.Tenant3.foreign_key.models.get_foo, on_delete=django.db.models.deletion.CASCADE, related_name='bars', to='dynamic_models.foo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='B',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('y', models.IntegerField(default=10)),
                ('a', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.a')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Waiter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('restaurant', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.restaurant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserStat',
            fields=[
                ('user', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dynamic_models.ouser')),
                ('posts', models.IntegerField()),
                ('results', zelthy3.backend.apps.tenants.dynamic_models.fields.ZForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.userstatresult')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.IntegerField()),
                ('base_stats', zelthy3.backend.apps.tenants.dynamic_models.fields.ZOneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dynamic_models.userstat')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
