version: "3.8"

services:
  postgres:
    image: postgres
    env_file:
      - .env
    expose:
      - 5432
    volumes:
      - dev_db:/var/lib/postgresql/data

  app:
    build:
      context: .
      dockerfile: dev.dockerfile
      args:
        - UID=${UID}
        - GID=${GID}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      ENV: dev
    volumes:
      - .:/zango/
    healthcheck:
      test: ["CMD-SHELL", "netstat -ltn | grep -q 8000"]
      timeout: 5s
      retries: 3

  celery:
    build:
      context: .
      dockerfile: dev.dockerfile
      args:
        - UID=${UID}
        - GID=${GID}
    command: /bin/sh -c "cd ${PROJECT_NAME} && celery -A ${PROJECT_NAME} worker -l info"
    volumes:
      - .:/zango/
    env_file:
      - .env
    depends_on:
      app:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  celery_beat:
    image: kczelthy/zango:latest
    command: /bin/sh -c "cd ${PROJECT_NAME} && celery -A ${PROJECT_NAME} beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/zango/
    env_file:
      - .env
    depends_on:
      app:
        condition: service_healthy
      redis:
        condition: service_healthy


volumes:
  dev_db:
