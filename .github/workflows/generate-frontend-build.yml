name: Continuous Integration for Frontend

on:
  push:
    branches:
      - feat/fe-build-workflow
    paths:
      - "frontend/**"
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - feat/fe-build-workflow
    paths:
      - "frontend/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: |
          cd frontend
          yarn install

      - name: Building app
        run: |
          cd frontend
          CI=false yarn build

      - name: Extract branch name
        id: extract_branch
        run: |
          echo "GITHUB_REF=$GITHUB_REF"
          branch_name=${GITHUB_REF#refs/heads/}
          echo "Branch name is $branch_name"
          echo "::set-output name=branch::$branch_name"

      - name: Post build artifact link to PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { context, getOctokit } = require('@actions/github');
            const github = getOctokit(process.env.GITHUB_TOKEN);
            const pullRequest = context.payload.pull_request;
            if (pullRequest) {
              const issueNumber = pullRequest.number;
              const repo = context.repo.repo;
              const owner = context.repo.owner;
              const artifactUrl = `https://github.com/${owner}/${repo}/actions/runs/${context.runId}/artifacts`;
              
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: issueNumber,
                body: `Build artifact is available [here](${artifactUrl}).`
              });
            } else {
              console.log("Not a pull request, skipping comment.");
            }

      
      # - name: Notify on z-deployment_notifs slack channel
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.Z_DEPOY_NOTIFS_SLACK_WEBHOOK_URL }}
      #     SLACK_TITLE: New deployment in documentation environment of ${{ github.event.repository.name }}
      #     SLACK_CHANNEL: "z-deployment-notifs"
