name: Continuous Integration for Frontend

on:
  push:
    branches:
      - feat/fe-build-workflow
    paths:
      - "frontend/**"
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - feat/fe-build-workflow
    paths:
      - "frontend/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: |
          cd frontend
          yarn install

      - name: Building app
        run: yarn build

      - name: Extract branch name
        id: extract_branch
        run: |
          if [[ ${{ github.ref }} == "refs/heads/development" ]]; then
            echo "::set-output name=branch::dev"
          elif [[ ${{ github.ref }} == "refs/heads/staging" ]]; then
            echo "::set-output name=branch::staging"
          elif [[ ${{ github.ref }} == "refs/heads/main" ]]; then
            echo "::set-output name=branch::prod"
          else
            echo "Error: Invalid branch name"
            exit 1
          fi
  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
       - name: Push to branch
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          source-directory: ${{ inputs.source-directory }}
          target-directory: ${{ inputs.target-directory }}
          destination-github-username: ${{ inputs.destination-github-username }}
          destination-repository-name: ${{ inputs.destination-repository-name }}
          commit-message: ${{ inputs.commit-message }}
          user-email: ${{ secrets.USER_EMAIL }}
          target-branch: ${{ inputs.target-branch }}
      
      - name: Notify on z-deployment_notifs slack channel
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.Z_DEPOY_NOTIFS_SLACK_WEBHOOK_URL }}
          SLACK_TITLE: New deployment in documentation environment of ${{ github.event.repository.name }}
          SLACK_CHANNEL: "z-deployment-notifs"
