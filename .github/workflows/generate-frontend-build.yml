name: Continuous Integration for Frontend

on:
  push:
    branches:
      - feat/fe-build-workflow
    paths:
      - "frontend/**"
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - feat/fe-build-workflow
    paths:
      - "frontend/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: |
          cd frontend
          yarn install

      - name: Building app
        run: |
          cd frontend
          CI=false yarn build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: backend/src/zango/assets/app_panel/js

      - name: Extract branch name
        id: extract_branch
        run: |
          echo "GITHUB_REF=$GITHUB_REF"
          branch_name=${GITHUB_REF#refs/heads/}
          echo "Branch name is $branch_name"
          echo "::set-output name=branch::$branch_name"

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        env: 
            GITHUB_TOKEN: ${{ secrets.WORKFLOW_API_TOKEN }}
        with:
          message: |
            Hello world ! :wave:
      # - name: Comment on PR
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.WORKFLOW_API_TOKEN }}
      #     script: |
      #       const prNumber = context.payload.pull_request.number;
      #       const commentBody = "Thank you for raising a PR against the main branch. Please ensure all checks pass before requesting a review.";

      #       github.rest.pulls.createReview({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: prNumber,
      #         body: commentBody,
      #         event: 'COMMENT'
      #       });

      
      # - name: Notify on z-deployment_notifs slack channel
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.Z_DEPOY_NOTIFS_SLACK_WEBHOOK_URL }}
      #     SLACK_TITLE: New deployment in documentation environment of ${{ github.event.repository.name }}
      #     SLACK_CHANNEL: "z-deployment-notifs"
